---
layout: life
title: redis配置文件说明
category: 数据库学习
duoshuo: true
date: 2015-04-15
---

***redis info***

```sh
	redis-cli
	auth 密码
	info	
```

<!-- more -->

* [server]

>
记录了 Redis 服务器的信息

|名字|说明|
|:------|:------|
|redis_version|redis服务器版本|
|redis_git_sha1| Git SHA1|
|redis_git_dirty|Git dirty flag|
|os|Redis 服务器的宿主操作系统|
|arch_bits|架构（32 或 64 位）|
|multiplexing_api|Redis 所使用的事件处理机制|
|gcc_version|编译 Redis 时所使用的 GCC 版本|
|process_id|服务器进程的 PID|
|run_id|Redis 服务器的随机标识符（用于 Sentinel 和集群）|
|tcp_port|TCP/IP 监听端口|
|uptime_in_seconds|自 Redis 服务器启动以来，经过的秒数|
|uptime_in_days|自 Redis 服务器启动以来，经过的天数|
|lru_clock|以分钟为单位进行自增的时钟，用于 LRU 管理|

* [clients]

>
记录了已链接客户端信息

|名字|说明|
|:------|:------|
|connected_clients|已连接客户端的数量（不包括通过从属服务器连接的客户端）|
|client_longest_output_list|当前连接的客户端当中，最长的输出列表|
|client_longest_input_buf|当前连接的客户端当中，最大输入缓存|
|blocked_clients|正在等待阻塞命令（BLPOP、BRPOP、BRPOPLPUSH）的客户端的数量|

* [memory]

>
记录了服务器的内存信息

|名字|说明|
|:------|:------|
|used_memory|由 Redis 分配器分配的内存总量，以字节（byte）为单位|
|used_memory_human|以人类可读的格式返回 Redis 分配的内存总量|
|used_memory_rss|从操作系统的角度，返回 Redis 已分配的内存总量（俗称常驻集大小）。这个值和 top 、 ps 等命令的输出一致|
|used_memory_peak|Redis 的内存消耗峰值（以字节为单位）|
|used_memory_peak_human|以人类可读的格式返回 Redis 的内存消耗峰值|
|used_memory_lua|Lua 引擎所使用的内存大小（以字节为单位）|
|mem_fragmentation_ratio|used_memory_rss 和 used_memory 之间的比率|
|mem_allocator|在编译时指定的， Redis 所使用的内存分配器。可以是 libc 、 jemalloc 或者 tcmalloc|

* [persistence]

>
记录了跟 RDB 持久化和 AOF 持久化有关的信息

|名字|说明|
|:------|:------|
|loading|一个标志值，记录了服务器是否正在载入持久化文件|
|rdb_changes_since_last_save|距离最近一次成功创建持久化文件之后，经过了多少秒|
|rdb_bgsave_in_progress|一个标志值，记录了服务器是否正在创建 RDB 文件|
|rdb_last_save_time|最近一次成功创建 RDB 文件的 UNIX 时间戳|
|rdb_last_bgsave_status|一个标志值，记录了最近一次创建 RDB 文件的结果是成功还是失败|
|rdb_last_bgsave_time_sec|记录了最近一次创建 RDB 文件耗费的秒数|
|rdb_current_bgsave_time_sec|如果服务器正在创建 RDB 文件，那么这个域记录的就是当前的创建操作已经耗费的秒数|
|aof_enabled|一个标志值，记录了 AOF 是否处于打开状态|
|aof_rewrite_in_progress|一个标志值，记录了服务器是否正在创建 AOF 文件|
|aof_rewrite_scheduled|一个标志值，记录了在 RDB 文件创建完毕之后，是否需要执行预约的 AOF 重写操作|
|aof_last_rewrite_time_sec|最近一次创建 AOF 文件耗费的时长|
|aof_current_rewrite_time_sec|如果服务器正在创建 AOF 文件，那么这个域记录的就是当前的创建操作已经耗费的秒数|
|aof_last_bgrewrite_status|一个标志值，记录了最近一次创建 AOF 文件的结果是成功还是失|
|aof_current_size|AOF 持久化功能处于开启状态--AOF 文件目前的大小|
|aof_base_size|AOF 持久化功能处于开启状态--服务器启动时或者 AOF 重写最近一次执行之后，AOF 文件的大小|
|aof_pending_rewrite|AOF 持久化功能处于开启状态--一个标志值，记录了是否有 AOF 重写操作在等待 RDB 文件创建完毕之后执行|
|aof_buffer_length|AOF 持久化功能处于开启状态--AOF 缓冲区的大小|
|aof_rewrite_buffer_length|AOF 持久化功能处于开启状态--AOF 重写缓冲区的大小|
|aof_pending_bio_fsync|AOF 持久化功能处于开启状态--后台 I/O 队列里面，等待执行的 fsync 调用数量|
|aof_delayed_fsync|AOF 持久化功能处于开启状态--被延迟的 fsync 调用数量|

* [stats]

>
记录了一般统计信息

|名字|说明|
|:------|:------|
|total_connections_received|服务器已接受的连接请求数量|
|total_commands_processed|服务器已执行的命令数量|
|instantaneous_ops_per_sec|服务器每秒钟执行的命令数量|
|rejected_connections|因为最大客户端数量限制而被拒绝的连接请求数量|
|expired_keys|因为过期而被自动删除的数据库键数量|
|evicted_keys|因为最大内存容量限制而被驱逐（evict）的键数量|
|keyspace_hits|查找数据库键成功的次数|
|keyspace_misses|查找数据库键失败的次数|
|pubsub_channels|目前被订阅的频道数量|
|pubsub_patterns|目前被订阅的模式数量|
|latest_fork_usec|最近一次 fork() 操作耗费的毫秒数|

* [replication]

>
主/从复制信息

|名字|说明|
|:------|:------|
|role|如果当前服务器没有在复制任何其他服务器，那么这个域的值就是 master ；否则的话，这个域的值就是 slave 。注意，在创建复制链的时候，一个从服务器也可能是另一个服务器的主服务器|
|ter_host|从服务器---主服务器的 IP 地址|
|master_port|从服务器---主服务器的 TCP 监听端口号|
|master_link_status|从服务器---复制连接当前的状态， up 表示连接正常， down 表示连接断开|
|master_last_io_seconds_ago|从服务器---距离最近一次与主服务器进行通信已经过去了多少秒钟|
|master_sync_in_progress|从服务器---一个标志值，记录了主服务器是否正在与这个从服务器进行同步|
|master_sync_left_bytes|同步操作正在进行---距离同步完成还缺少多少字节数据|
|master_sync_last_io_seconds_ago|同步操作正在进行---距离最近一次因为 SYNC 操作而进行 I/O 已经过去了多少秒|
|master_link_down_since_seconds|断线状态---主从服务器连接断开了多少秒|
|connected_slaves|已连接的从服务器数量|

* [cpu]

>
计算量统计信息

|名字|说明|
|:------|:------|
|used_cpu_sys|Redis 服务器耗费的系统 CPU|
|used_cpu_user|Redis 服务器耗费的用户 CPU|
|used_cpu_sys_children|后台进程耗费的系统 CPU|
|used_cpu_user_children|后台进程耗费的用户 CPU|

* [keyspace]

>
记录了数据库相关的统计信息，比如数据库的键数量、数据库已经被删除的过期键数量等





